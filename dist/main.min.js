!function r(s,a,d){function w(e,n){if(!a[e]){if(!s[e]){var i="function"==typeof require&&require;if(!n&&i)return i(e,!0);if(E)return E(e,!0);var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}var t=a[e]={exports:{}};s[e][0].call(t.exports,function(n){return w(s[e][1][n]||n)},t,t.exports,r,s,a,d)}return a[e].exports}for(var E="function"==typeof require&&require,n=0;n<d.length;n++)w(d[n]);return w}({1:[function(n,e,i){"use strict";var t,r,s,a,o,d;window.addEventListener("keydown",function(n){var e=n.which;38==e?a.position.y<3.2&&(a.position.y+=.2):40==e?-3.2<a.position.y&&(a.position.y-=.2):37==e?-6<a.position.x&&(a.position.x-=.2):39==e?a.position.x<6&&(a.position.x+=.2):32==e&&(o||function(){var n=new THREE.CircleGeometry(.1,32),e=new THREE.MeshBasicMaterial({color:16711680});(o=new THREE.Mesh(n,e)).position.x=a.position.x,o.position.y=a.position.y,r.add(o)}())},!1),window.addEventListener("resize",function(){t.aspect=window.innerWidth/window.innerHeight,t.updateProjectionMatrix(),s.setSize(window.innerWidth,window.innerHeight)},!1),function(){(r=new THREE.Scene).background=new THREE.Color(6395885),t=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),(s=new THREE.WebGLRenderer({antialias:!0})).setSize(window.innerWidth,window.innerHeight),document.body.appendChild(s.domElement);var n=new THREE.BoxGeometry(1,.3,.1),e=new THREE.MeshBasicMaterial({color:16777215});a=new THREE.Mesh(n,e),r.add(a);var i=new THREE.BoxGeometry(3,10,.1),o=new THREE.MeshBasicMaterial({color:16777215});d=new THREE.Mesh(i,o),r.add(d),d.position.x=0,d.position.y=0,a.position.x=-6,t.position.z=5}(),function n(){requestAnimationFrame(n),o&&(o.position.x+=.5,console.log(o.position.x),9<o.position.x&&(o=null,r.remove(o),console.log("Remove bullet"))),s.render(r,t)}()},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
